#!/usr/bin/python -Wall
# -*- coding: utf-8 -*-
"""
<div id="content">
<div style="text-align:center;" class="print"><img src="images/print_page_logo.png" alt="projecteuler.net" style="border:none;" /></div>
<h2>Even Fibonacci numbers</h2><div id="problem_info" class="info"><h3>Problem 2</h3><span>Published on Friday, 19th October 2001, 06:00 pm; Solved by 387945; Difficulty rating: 5%</span></div>
<div class="problem_content" role="problem">
<p>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:</p>
<p style="text-align:center;">1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...</p>
<p>By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.</p>
<!--
Note: This problem has been changed recently, please check that you are using the right parameters.
-->
</div><br />
<br /></div>
"""
def calcE():
    x = y = 1
    sum = 0
    while (sum < 4000000):
        sum += (x + y)
        x, y = x + 2 * y, 2 * x + 3 * y
    return sum

result = calcE()

print "great answer = ", result

def F(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return F(n-2) + F(n-1)
        
i = 0
result2 = 0
while (i < 4000000):
    res = F(i)
    if (res % 2 == 0) :
        result2 += res
    i += 1


print "brute force =",  result2

